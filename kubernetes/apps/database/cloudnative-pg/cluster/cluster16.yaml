---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2-3
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: ceph-block
  superuserSecret:
    name: &secretName cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
      memory: 256Mi
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
    # Ref: https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - { sourceLabels: ["cluster"], targetLabel: cnpg_cluster, action: replace }
      - { regex: cluster, action: labeldrop }
  backup:
    retentionPolicy: 7d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: &s3 https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-v2
      s3Credentials:
        accessKeyId:
          name: *secretName
          key: s3-access-key-id
        secretAccessKey:
          name: *secretName
          key: s3-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     # Should match name in externalClusters
  #     source: &previousCluster postgres16-v1
  #   # Use for major upgrades or creating new cluster from existing
  #   initdb:
  #     import:
  #       type: monolith
  #       databases: ["*"]
  #       roles: ["*"]
  #       source:
  #         externalCluster: old-cluster
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   # for s3 restore
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
  #   # for initdb restore
  #   - name: old-cluster
  #     connectionParameters:
  #       host: postgres16-rw.default.svc.cluster.local
  #       user: postgres
  #       dbname: postgres
  #     password:
  #       name: *secretName
  #       key: password
