---
# GatewayClass for Cilium
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: cilium
spec:
  controllerName: io.cilium/gateway-controller
---
# External Gateway
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external
  namespace: kube-system
  annotations:
    external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
spec:
  gatewayClassName: cilium
  addresses:
    - type: IPAddress
      value: ${SVC_NGINX_EXTERNAL}
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-blog
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_BLOG}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-blog
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_BLOG}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-blogcom
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_BLOGCOM}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-blogcom
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_BLOGCOM}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-media
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_MEDIA}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-media
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_MEDIA}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-lake
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_LAKE}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-lake
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_LAKE}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-yoyo
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_YOYO}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-yoyo
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_YOYO}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-bon
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_BON}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-bon
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_BON}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
---
# Internal Gateway
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: internal
  namespace: kube-system
spec:
  gatewayClassName: cilium
  addresses:
    - type: IPAddress
      value: ${SVC_NGINX_INTERNAL}
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-blog
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_BLOG}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-blog
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_BLOG}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-blogcom
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_BLOGCOM}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-blogcom
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_BLOGCOM}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-media
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_MEDIA}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-media
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_MEDIA}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-lake
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_LAKE}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-lake
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_LAKE}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-yoyo
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_YOYO}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-yoyo
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_YOYO}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-bon
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN_BON}"
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-bon
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN_BON}"
      tls:
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
      allowedRoutes:
        namespaces:
          from: All

